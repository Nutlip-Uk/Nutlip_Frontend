import{S as l,R as n,L as r,T as g,U as w,V as f,X as p,Y as m,Z as u}from"./index-GxelU0FC.js";class v extends l{async authenticateUser(){var e;if(!this.provider||!((e=this.chainConfig)!==null&&e!==void 0&&e.chainId))throw n.notConnectedError();const{chainNamespace:s,chainId:c}=this.chainConfig;if(this.status!==r.CONNECTED)throw n.notConnectedError("Not connected with wallet, Please login/connect first");const t=await this.provider.request({method:"eth_accounts"});if(t&&t.length>0){const i=g(t[0],this.name);if(i&&!w(i))return{idToken:i};const h={domain:window.location.origin,uri:window.location.href,address:t[0],chainId:parseInt(c,16),version:"1",nonce:Math.random().toString(36).slice(2),issuedAt:new Date().toISOString()},o=await f(h,s),d=await this.provider.request({method:"personal_sign",params:[o,t[0]]}),a=await p(s,d,o,this.name,this.sessionTime);return m(t[0],this.name,a),{idToken:a}}throw n.notConnectedError("Not connected with wallet, Please login/connect first")}async disconnect(){if(this.status!==r.CONNECTED)throw n.disconnectionError("Not connected with wallet");const e=await this.provider.request({method:"eth_accounts"});e&&e.length>0&&u(e[0],this.name)}}export{v as B};
